# ============================================================================
# Simplified Blue-Green Deployment using Argo Rollouts
# Zero-Downtime Deployment Demo
# ============================================================================

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: demo-app-blue-green
  namespace: applications
  labels:
    app: demo-app
    strategy: blue-green
spec:
  replicas: 3
  revisionHistoryLimit: 3
  
  selector:
    matchLabels:
      app: demo-app
  
  template:
    metadata:
      labels:
        app: demo-app
        strategy: blue-green
    spec:
      containers:
        - name: demo-app
          image: 092382576187.dkr.ecr.us-east-1.amazonaws.com/demo-app:1.0-working
          imagePullPolicy: Always
          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          
          # Environment variables for app configuration
          env:
            - name: APP_VERSION
              value: "1.0"
            - name: DEPLOYMENT_STRATEGY
              value: "blue-green"
          
          # Resource management
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          
          # Health checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
  
  # Blue-Green Strategy Configuration
  strategy:
    blueGreen:
      # Service that the rollout modifies as the active service
      activeService: demo-app-active
      
      # Service that the rollout modifies as the preview service
      previewService: demo-app-preview
      
      # Manual promotion required
      autoPromotionEnabled: false
      
      # Duration to keep the preview version alive after promotion
      scaleDownDelaySeconds: 30
      
      # How long to wait before scaling down the old version
      scaleDownDelayRevisionLimit: 1

---
# ============================================================================
# Active Service (Production Traffic)
# ============================================================================
apiVersion: v1
kind: Service
metadata:
  name: demo-app-active
  namespace: applications
  labels:
    app: demo-app
    service: active
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: demo-app

---
# ============================================================================
# Preview Service (Testing/Validation)
# ============================================================================
apiVersion: v1
kind: Service
metadata:
  name: demo-app-preview
  namespace: applications
  labels:
    app: demo-app
    service: preview
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: demo-app
