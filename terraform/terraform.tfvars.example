# Example Terraform Variables Configuration
# Copy this file to terraform.tfvars and update with your values
# WARNING: terraform.tfvars should be gitignored as it contains sensitive data

# ============================================================================
# Project Configuration
# ============================================================================
project_name = "zdd-eks"
environment  = "production"
aws_region   = "us-west-2"

# ============================================================================
# VPC Configuration
# ============================================================================
vpc_cidr = "10.0.0.0/16"

azs = [
  "us-west-2a",
  "us-west-2b",
  "us-west-2c"
]

private_subnets = [
  "10.0.1.0/24",
  "10.0.2.0/24",
  "10.0.3.0/24"
]

public_subnets = [
  "10.0.101.0/24",
  "10.0.102.0/24",
  "10.0.103.0/24"
]

intra_subnets = [
  "10.0.51.0/24",
  "10.0.52.0/24",
  "10.0.53.0/24"
]

# Cost optimization: Set to true for dev/staging environments
# WARNING: In production, keep false for high availability
single_nat_gateway = false

# ============================================================================
# EKS Cluster Configuration
# ============================================================================
cluster_version = "1.31"

cluster_endpoint_public_access  = true
cluster_endpoint_private_access = true

# Restrict to your IP for better security
# Example: ["1.2.3.4/32"] for single IP
cluster_endpoint_public_access_cidrs = ["0.0.0.0/0"]

# ============================================================================
# EKS Node Groups
# ============================================================================
# Customize based on your workload requirements
node_groups = {
  # General purpose on-demand instances
  general = {
    instance_types = ["t3.large"]
    capacity_type  = "ON_DEMAND"
    min_size       = 2
    max_size       = 10
    desired_size   = 3
    disk_size      = 50
    labels = {
      role = "general"
    }
    taints = []
  }

  # Spot instances for cost optimization
  spot = {
    instance_types = ["t3.large", "t3a.large", "t2.large"]
    capacity_type  = "SPOT"
    min_size       = 1
    max_size       = 5
    desired_size   = 2
    disk_size      = 50
    labels = {
      role = "spot"
    }
    taints = [{
      key    = "spot"
      value  = "true"
      effect = "NoSchedule"
    }]
  }
}

# ============================================================================
# Monitoring and Logging
# ============================================================================
enable_cloudwatch_logs = true

cluster_enabled_log_types = [
  "audit",
  "api",
  "authenticator",
  "controllerManager",
  "scheduler"
]

cloudwatch_log_group_retention_in_days = 30

# ============================================================================
# Security
# ============================================================================
enable_irsa           = true
enable_kms_encryption = true

# ============================================================================
# Tags
# ============================================================================
tags = {
  Terraform   = "true"
  Environment = "production"
  Project     = "Zero-Downtime-Deployment"
  ManagedBy   = "Terraform"
  Team        = "DevOps"
  CostCenter  = "Engineering"
}
